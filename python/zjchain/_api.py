'''
import sha3
import uuid
import hashlib
import requests

from secp256k1 import PrivateKey, PublicKey

from eth_account.datastructures import SignedMessage
from eth_account.messages import encode_defunct, encode_structured_data, SignableMessage
from eth_account import Account
from web3 import Web3, AsyncWeb3, eth, utils
from eth_keys import keys, datatypes
from eth_utils import decode_hex, encode_hex
from eth_abi import encode
from urllib.parse import urlencode



w3 = Web3(Web3.IPCProvider('/Users/myuser/Library/Ethereum/geth.ipc'))

CONTRACT_CODES = ""


def gen_keypair(private_key_str: str) -> tuple[bytes, bytes]:
    privkey = bytes(bytearray.fromhex(private_key_str))
    pk = keys.PrivateKey(privkey)
    return privkey, decode_hex(str(pk.public_key))

def pubkey_to_account(pub_key_bytes: bytes) -> str:
    addr = keccak256_bytes(pub_key_bytes)
    return addr[len(addr)-40:len(addr)]
    

def sign_message(privkey: bytes, gid: str, pubkey: bytes, to: str, amount: int, gas_limit: int, gas_price: int, step: int, contract_bytes: str, input: str, prepay: int) -> SignedMessage:
    frompk = decode_hex('04' + encode_hex(pubkey)[2:])
    b = decode_hex(gid) + frompk + decode_hex(to) + _long_to_bytes(amount) + _long_to_bytes(gas_limit) + _long_to_bytes(gas_price) + _long_to_bytes(step)
    if contract_bytes != '':
        b += decode_hex(contract_bytes)
    if input != '':
        b += decode_hex(input)
    b += _long_to_bytes(prepay)

    h = keccak256_bytes(b)

    message = encode_defunct(hexstr=h)
    # sign = w3.eth.account.sign_message(message, private_key=privkey)
    sign = Account.sign_message(message, privkey)
    return sign


def _long_to_bytes(i: int) -> bytes:
    return i.to_bytes(8, 'little')


def gen_contract_params(gid: str, addrs: [str], meta_data: str, auth_data: str, pubkey: bytes):
    """
    生成合约构造参数
    """
    for addr in addrs:
        if not addr.startswith('0x'):
            return
    param_sig = encode_func_param(['address[]', 'bytes', 'bytes'], [addrs, bytes(meta_data, 'utf-8'), bytes(auth_data, 'utf-8')])
    contract_bytes = CONTRACT_CODES + param_sig

    account_id = pubkey_to_account(pubkey)
    contract_addr_str = account_id + gid + contract_bytes
    kehash = w3.keccak(hexstr=contract_addr_str).hex()
    contract_address = kehash[len(kehash)-40:len(kehash)]
    return contract_address, contract_bytes


def create_data_auth(contract_address: str, contract_bytes: bytes, gid: str, pubkey: bytes, sign: SignedMessage):
    """创建合约账户
    """
    post_data = _do_transaction(sign, pubkey, gid, to=contract_address,
                                amount=0, prepay=0, contract_bytes=contract_bytes,
                                input='', step=6)
    res = _call_transaction(post_data)
    return res


def prepayment(sign: SignedMessage, pubkey: bytes, to: str):
    '''
    预付
    '''
    post_data = _do_transaction(
        sign=sign,
        pubkey=pubkey,
        gid='',
        to=to,
        amount=0,
        prepay=100000000000,
        contract_bytes='',
        input='',
        step=7,
    )
    return _call_transaction(post_data=post_data)


def data_auth(sign: SignedMessage, pubkey: bytes, to: str, auth_data: str):
    method_name = 'Authorization(bytes)'
    func_sig = encode_func_signature(method_name)
    param_sig = encode_func_param(['bytes'], [bytes(auth_data, 'utf-8')])
    input = func_sig + param_sig
    post_data = _do_transaction(
        sign=sign,
        pubkey=pubkey,
        gid='',
        to=to,
        amount=0,
        prepay=0,
        contract_bytes='',
        input=input,
        step=8,
    )
    return _call_transaction(post_data)


def get_auths(to: str, fr: str, limit: int, offset: int):
    method_name = 'GetAuthJson(uint32,uint32)'
    func_sig = encode_func_signature(method_name)
    param_sig = encode_func_param(['uint32', 'uint32'], [offset, limit])
    input = func_sig + param_sig

    post_data = {
        'input': input,
        'address': to,
        'from': fr,
    }
    return _query_contract(post_data)


def _do_transaction(sign: SignedMessage, pubkey: bytes, gid: str, to: str, amount: int, prepay: int, contract_bytes: str, input: str, step: int):
    if gid == '':
        gid = gen_gid(get_random_hex_str())

    ret = {
        'gid': gid,
        'pubkey': '04' + encode_hex(pubkey)[2:],
        'to': to,
        'type': step,
        'amount': amount,
        'gas_limit': 100000000,
        'gas_price': 1,
        'shard_id': 3,
        'sign_r': str(hex(sign.r))[2:],
        'sign_s': str(hex(sign.s))[2:],
        'sign_v': sign.v - 27,
        'pepay': prepay,
        }
    
    if contract_bytes != '':
        ret['bytes_code'] = contract_bytes

    if input != '':
        ret['input'] = input

    return ret


def _call_transaction(post_data: dict):
    return _post_data('http://82.156.224.174:8781/transaction', post_data)


def _query_contract(post_data: dict):
    return _post_data('http://82.156.224.174:8781/ query_contract', post_data)


def _post_data(path: str, data: dict):
    querystr = urlencode(data)
    res = requests.post(path, data=data, headers={
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length': str(len(bytes(querystr, 'utf-8'))),
    })
    return res

def gen_gid(hex_str: str) -> str:
    ret = hashlib.sha256(hex_str.encode('utf-8')).hexdigest()
    return (64 - len(ret)) * '0' + ret

def get_random_hex_str() -> str:
    return uuid.uuid4().hex

def encode_func_signature(func_str: str) -> str:
    return keccak256(func_str)[:8]

def keccak256(s: str) -> str:
    k = sha3.keccak_256()
    k.update(bytes(s, 'utf-8'))
    return k.hexdigest()

def keccak256_bytes(b: bytes) -> str:
    k = sha3.keccak_256()
    k.update(b)
    return k.hexdigest()

def encode_func_param(param_types: list, param_values: list) -> str:
    return encode_hex(encode(param_types, param_values))[2:]



def sk_to_account(sk: str) -> str:
    _, pk = gen_keypair(sk)
    return pubkey_to_account(pk)




if __name__ == '__main__':
    private_key_str = 'b5039128131f96f6164a33bc7fbc48c2f5cf425e8476b1c4d0f4d186fbd0d708'
    privkey, pubkey = gen_keypair(private_key_str)
    gid = gen_gid(get_random_hex_str())
    meta_data = 'meta'
    auth_data = 'first'
    addrs = ['0xe252D01A37b85E2007Ed3CC13797aa92496204A4']
    contract_address, contract_bytes = gen_contract_params(gid, addrs, meta_data, auth_data, pubkey)
    amount = 0
    gas_limit = 100000000
    gas_price = 1
    sign = sign_message(
        privkey=privkey,
        gid=gid,
        pubkey=pubkey,
        to=contract_address,
        amount=0,
        gas_limit=gas_limit,
        gas_price=gas_price,
        step=6,
        contract_bytes=contract_bytes,
        input='',
        prepay=0,
    )
    
    res = create_data_auth(
        contract_address = contract_address,
        contract_bytes=contract_bytes,
        gid=gid,
        pubkey=pubkey,
        sign=sign)
'''